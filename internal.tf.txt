resource "aws_lb" "internal_alb" {
name = "myinternal-alb"
internal = true
load_balancer_type = "application"
subnets= [aws_subnet.private_subs[0].id,aws_subnet.private_subs[1].id]
security_groups=[aws_security_group.internalalbsg.id]
}
 
resource "aws_security_group" "internalalbsg" {
vpc_id=aws_vpc.myvpc.id
}
 
 
resource "aws_security_group_rule" "internalalb_in_rule" {
protocol          = "tcp"
  security_group_id = aws_security_group.internalalbsg.id
  from_port         = 9000
  to_port           = 9000
  type              = "ingress"
  cidr_blocks       = ["0.0.0.0/0"]
 
#source_security_group_id = aws_security_group.web_sg.id
}
 
resource "aws_security_group_rule" "internalalb_out_rule" {
 
  protocol          = "-1"
  security_group_id = aws_security_group.internalalbsg.id
  from_port         = "0"
  to_port           = "0"
  cidr_blocks       = ["0.0.0.0/0"]
  type              = "egress"
}
 
resource "aws_lb_target_group" "internal_target_group" {
name="internal-target-group"
port=80
protocol="HTTP"
vpc_id=aws_vpc.myvpc.id

}
 
resource "aws_lb_listener" "internal_listener" {
load_balancer_arn = aws_lb.internal_alb.arn
port = 80
protocol = "HTTP"
 
default_action {
target_group_arn =aws_lb_target_group.internal_target_group.arn
type="forward"
}
 
}